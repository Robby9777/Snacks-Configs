// input:
// 0.000185 StaleAir/s/kerbal
// 0.1 EC/s/kerbal
// output:
// 0.4 of StaleAir
// store: 
// 16 StaleAir/kerbal

@PART[*]:HAS[@MODULE[SoilRecycler],!MODULE[ModuleDeployableCentrifuge],!MODULE[ModuleDeployableHabitat]] //filter out deployable habitats
{
	//Calculating Air Scrubber inputs and outputs
	%StaleAirRate = 0.000185
	@StaleAirRate *= #$CrewCapacity$
	
	%ECRate = 0.1
	@ECRate *= #$CrewCapacity$
	
	%FreshAirRate = #$StaleAirRate$
	@FreshAirRate *= 0.4
	
	%StaleAirMax = 16
	@StaleAirMax *= #$CrewCapacity$
	
	MODULE
	{
		name = SnacksConverter
		ConverterName = Air Scrubber
		StartActionName = Start Air Scrubber
		StopActionName = Stop Air Scribber
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		INPUT_RESOURCE
		{
			ResourceName = StaleAir
			Ratio = #$../../StaleAirRate$
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = #$../../ECRate$
			FlowMode = STAGE_PRIORITY_FLOW
		}

		OUTPUT_RESOURCE
		{
			ResourceName = FreshAir
			Ratio = #$../../FreshAirRate$
			FlowMode = ALL_VESSEL
		}	
	}

	RESOURCE
	{
		name = StaleAir
		amount = 0
		maxAmount = #$../StaleAirMax$
	}
}

@PART[*]:HAS[@MODULE[ModuleDeployableCentrifuge]] //patch for centrifuge habitats
{
	//Calculating Air Scrubber inputs and outputs
	%StaleAirRate = 0.000185
	@StaleAirRate *= #$MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
	
	%ECRate = 0.1
	@ECRate *= #$MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
	
	%FreshAirRate = #$StaleAirRate$
	@FreshAirRate *= 0.4
	
	%AirMax = 16
	@AirMax *= #$MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
	
	MODULE
	{
		name = SnacksConverter
		ConverterName = Air Scrubber
		StartActionName = Start Air Scrubber
		StopActionName = Stop Air Scribber
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		INPUT_RESOURCE
		{
			ResourceName = StaleAir
			Ratio = #$../../StaleAirRate$
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = #$../../ECRate$
			FlowMode = STAGE_PRIORITY_FLOW
		}

		OUTPUT_RESOURCE
		{
			ResourceName = FreshAir
			Ratio = #$../../FreshAirRate$
			FlowMode = ALL_VESSEL
		}	
	}

	RESOURCE
	{
		name = StaleAir
		amount = 0
		maxAmount = #$../AirMax$
	}
	//Add Fresh Air as well since Snacks! thinks these parts are uncrewed.
	RESOURCE
	{
		name = FreshAir
		amount = #$../AirMax$
		maxAmount = #$../AirMax$
	}
}

@PART[*]:HAS[@MODULE[ModuleDeployableHabitat]] //patch for inflatable habitats
{
	//Calculating Air Scrubber inputs and outputs
	%StaleAirRate = 0.000185
	@StaleAirRate *= #$MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
	
	%ECRate = 0.1
	@ECRate *= #$MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
	
	%FreshAirRate = #$StaleAirRate$
	@FreshAirRate *= 0.4
	
	%AirMax = 16
	@AirMax *= #$MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
	
	MODULE
	{
		name = SnacksConverter
		ConverterName = Air Scrubber
		StartActionName = Start Air Scrubber
		StopActionName = Stop Air Scribber
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		INPUT_RESOURCE
		{
			ResourceName = StaleAir
			Ratio = #$../../StaleAirRate$
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = #$../../ECRate$
			FlowMode = STAGE_PRIORITY_FLOW
		}

		OUTPUT_RESOURCE
		{
			ResourceName = FreshAir
			Ratio = #$../../FreshAirRate$
			FlowMode = ALL_VESSEL
		}	
	}

	RESOURCE
	{
		name = StaleAir
		amount = 0
		maxAmount = #$../AirMax$
	}
	//Add Fresh Air as well since Snacks! thinks these parts are uncrewed.
	RESOURCE
	{
		name = FreshAir
		amount = #$../AirMax$
		maxAmount = #$../AirMax$
	}
}
